contract Contract {
    function main() {
        memory[0x40:0x60] = 0x80;
        var var0 = msg.value;

        if (var0) { revert(memory[0x00:0x00]); }

        if (msg.data.length < 0x04) { revert(memory[0x00:0x00]); }

        var0 = msg.data[0x00:0x20] >> 0xe0;

        if (var0 == 0x5ec01e4d) {
            // Dispatch table entry for random()
            var var1 = 0x004e;
            var var2 = storage[0x00] & (0x01 << 0xa0) - 0x01;
            var temp0 = memory[0x40:0x60];
            memory[temp0:temp0 + 0x20] = var2 & (0x01 << 0xa0) - 0x01;
            var temp1 = memory[0x40:0x60];
            return memory[temp1:temp1 + (temp0 + 0x20) - temp1];
        } else if (var0 == 0x64d98f6e) {
            // Dispatch table entry for isSolved()
            var1 = 0x0073;
            var1 = isSolved();
            var temp2 = memory[0x40:0x60];
            memory[temp2:temp2 + 0x20] = !!var1;
            var1 = temp2 + 0x20;
            var temp3 = memory[0x40:0x60];
            return memory[temp3:temp3 + var1 - temp3];
        } else { revert(memory[0x00:0x00]); }
    }

    function isSolved() returns (var r0) {
        var var0 = 0x00;
        var var1 = storage[var0] & (0x01 << 0xa0) - 0x01 & (0x01 << 0xa0) - 0x01;
        var var2 = 0x799320bb;
        var temp0 = memory[0x40:0x60];
        memory[temp0:temp0 + 0x20] = (var2 & 0xffffffff) << 0xe0;
        var var3 = temp0 + 0x04;
        var temp1 = memory[0x40:0x60];
        var temp2;
        temp2, memory[temp1:temp1 + 0x20] = address(var1).staticcall.gas(msg.gas)(memory[temp1:temp1 + var3 - temp1]);
        var var4 = !temp2;

        if (!var4) {
            var temp3 = memory[0x40:0x60];
            var temp4 = returndata.length;
            memory[0x40:0x60] = temp3 + (temp4 + 0x1f & ~0x1f);
            var1 = 0x00fb;
            var3 = temp3;
            var2 = var3 + temp4;
            return func_0100(var2, var3);
        } else {
            var temp5 = returndata.length;
            memory[0x00:0x00 + temp5] = returndata[0x00:0x00 + temp5];
            revert(memory[0x00:0x00 + returndata.length]);
        }
    }

    function func_0100(var arg0, var arg1) returns (var r0) {
        var var0 = 0x00;

        if (arg0 - arg1 i< 0x20) { revert(memory[0x00:0x00]); }

        var temp0 = memory[arg1:arg1 + 0x20];
        var var1 = temp0;

        if (var1 == !!var1) { return var1; }
        else { revert(memory[0x00:0x00]); }
    }
}

